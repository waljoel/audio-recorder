//webkitURL is deprecated but nevertheless
URL = window.URL || window.webkitURL;

var gumStream; 						//stream from getUserMedia()
var recorder; 						//WebAudioRecorder object
var input; 							//MediaStreamAudioSourceNode  we'll be recording
var encodingType; 					//holds selected encoding for resulting audio (file)
var encodeAfterRecord = true;       // when to encode

// shim for AudioContext when it's not avb. 
var AudioContext = window.AudioContext || window.webkitAudioContext;
var audioContext; //new audio context to help us record

var encodingTypeSelect = document.getElementById("encodingTypeSelect");
var recordButton = document.getElementById("recordButton");
var stopButton = document.getElementById("stopButton");

//add events to those 2 buttons
recordButton.addEventListener("click", startRecording);
stopButton.addEventListener("click", stopRecording);

function startRecording() {
	console.log("startRecording() called");

	/*
		Simple constraints object, for more advanced features see
		https://addpipe.com/blog/audio-constraints-getusermedia/
	*/
    
    var constraints = { audio: true, video:false }

    /*
    	We're using the standard promise based getUserMedia() 
    	https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia
	*/

	navigator.mediaDevices.getUserMedia(constraints).then(function(stream) {
		__log("getUserMedia() success, stream created, initializing WebAudioRecorder...");

		/*
			create an audio context after getUserMedia is called
			sampleRate might change after getUserMedia is called, like it does on macOS when recording through AirPods
			the sampleRate defaults to the one set in your OS for your playback device

		*/
		audioContext = new AudioContext();

		//update the format 
		document.getElementById("formats").innerHTML="Format: 2 channel "+encodingTypeSelect.options[encodingTypeSelect.selectedIndex].value+" @ "+audioContext.sampleRate/1000+"kHz"

		//assign to gumStream for later use
		gumStream = stream;
		
		/* use the stream */
		input = audioContext.createMediaStreamSource(stream);
		
		//stop the input from playing back through the speakers
		//input.connect(audioContext.destination)

		//get the encoding 
		encodingType = encodingTypeSelect.options[encodingTypeSelect.selectedIndex].value;
		
		//disable the encoding selector
		encodingTypeSelect.disabled = true;

		recorder = new WebAudioRecorder(input, {
		  workerDir: "js/", // must end with slash
		  encoding: encodingType,
		  numChannels:2, //2 is the default, mp3 encoding supports only 2
		  onEncoderLoading: function(recorder, encoding) {
		    // show "loading encoder..." display
		    __log("Loading "+encoding+" encoder...");
		  },
		  onEncoderLoaded: function(recorder, encoding) {
		    // hide "loading encoder..." display
		    __log(encoding+" encoder loaded");
		  }
		});

		recorder.onComplete = function(recorder, blob) { 
			__log("Encoding complete");
			createDownloadLink(blob,recorder.encoding);
			encodingTypeSelect.disabled = false;
			
			fetch('https://predict-ailab.uruit.com/audio/classification/predict/401618c0-a23c-11eb-95d6-aa20eddd2f57', {
				    method: 'POST',
				    headers: {
					'accept': 'application/json',
					'Content-Type': 'application/json'
				    },
				    body: JSON.stringify({"format":"ogg","base64_audio":"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"})
				}).then(res => alert(res.json()))
				  .catch(error => console.error('Error:', error))
				  .then(response => console.log('Success:', response));
		}

		recorder.setOptions({
		  timeLimit:5,
		  encodeAfterRecord:encodeAfterRecord,
	      ogg: {quality: 0.5},
	      mp3: {bitRate: 160}
	    });

		//start the recording process
		recorder.startRecording();

		 __log("Recording started");

	}).catch(function(err) {
	  	//enable the record button if getUSerMedia() fails
    	recordButton.disabled = false;
    	stopButton.disabled = true;

	});

	//disable the record button
    recordButton.disabled = true;
    stopButton.disabled = false;
}

function stopRecording() {
	console.log("stopRecording() called");
	
	//stop microphone access
	gumStream.getAudioTracks()[0].stop();

	//disable the stop button
	stopButton.disabled = true;
	recordButton.disabled = false;
	
	//tell the recorder to finish the recording (stop recording + encode the recorded audio)
	recorder.finishRecording();

	__log('Recording stopped');
}

function createDownloadLink(blob,encoding) {
	
	var url = URL.createObjectURL(blob);
	var au = document.createElement('audio');
	var li = document.createElement('li');
	var link = document.createElement('a');

	//add controls to the <audio> element
	au.controls = true;
	au.src = url;

	//link the a element to the blob
	link.href = url;
	link.download = new Date().toISOString() + '.'+encoding;
	link.innerHTML = link.download;

	//add the new audio and a elements to the li element
	li.appendChild(au);
	li.appendChild(link);

	//add the li element to the ordered list
	recordingsList.appendChild(li);
}



//helper function
function __log(e, data) {
	log.innerHTML += "\n" + e + " " + (data || '');
}
